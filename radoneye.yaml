esphome:
  name: radoneye_rd200
  platform: ESP32
  board: nodemcu-32s
  includes:
    - radoneye.h
  libraries:
  - esp32_ble_tracker=https://github.com/nkolban/ESP32_BLE_Arduino.git
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Radoneye Fallback Hotspot"
    password: !secret hotspot_pass



logger:

# Enable Home Assistant API
api:
  password: !secret esphome_password

ota:
  password: !secret esphome_password

web_server:
  port: 80


sensor:
  - platform: custom
    lambda: |-
      auto my_radon = new RadonEye();
      App.register_component(my_radon);
      return {my_radon->radon_now, my_radon->radon_day, my_radon->radon_month};
    
    sensors:
      - name: "Radon now"
        unit_of_measurement: pCi/L
        accuracy_decimals: 2
        filters:
        - lambda: |-
           float MIN_VALUE = 0.00;
           float MAX_VALUE = 400.0;
           if (MIN_VALUE <= x && x <= MAX_VALUE) return x;
           else return {};
      - name: "Radon day"
        unit_of_measurement: pCi/L
        accuracy_decimals: 2
        filters:
        - lambda: |-
           float MIN_VALUE = 0.00;
           float MAX_VALUE = 400.0;
           if (MIN_VALUE <= x && x <= MAX_VALUE) return x;
           else return {};
      - name: "Radon month"
        unit_of_measurement: pCi/L
        accuracy_decimals: 2
        filters:
        - lambda: |-
           float MIN_VALUE = 0.00;
           float MAX_VALUE = 400.0;
           if (MIN_VALUE <= x && x <= MAX_VALUE) return x;
           else return {};
